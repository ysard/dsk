.\"                                      Hey, EMACS: \-*\- nroff \-*\-
.\" (C) Copyright 2017 Pierre Vignet <pierre.vignet.contact@caramail.fr>,
.\"
.\" First parameter, NAME, should be all caps
.\" Second parameter, SECTION, should be 1\-8, maybe w/ subsection
.\" other parameters are allowed: see man(7), man(1)
.TH DSK 1 "July 22, 2017"
.\" Please adjust this date whenever revising the manpage.
.\"
.\" Some roff macros, for reference:
.\" .nh        disable hyphenation
.\" .hy        enable hyphenation
.\" .ad l      left justify
.\" .ad b      justify to both left and right margins
.\" .nf        disable filling
.\" .fi        enable filling
.\" .br        insert line break
.\" .sp <n>    insert n+1 empty lines
.\" for manpage\-specific macros, see man(7)
.SH NAME
dsk \- a k\-mer counter for reads or genomes.

.SH DESCRIPTION

It takes as input a set of sequences in FASTA or FASTQ format (see "Input" section).
DSK outputs a set of solid kmers, i.e. kmers which occur more than a minimal amount 
of times in the input (\-abundance\-min parameter). It also outputs the number of times
these kmers occur. See "Results visualization" section to learn how to use its output.

.BI "Input"
.PP
.RS
File input format can be fasta, fastq, either gzipped or not.

To pass several files as input, separate file names by a comma (","), for example:
.PP
.RS
dsk  \-file A1.fa,A2.fa,A3.fa  \-kmer\-size 31
.RE
.PP
Alternatively, input can be a list of files (one file per line):

.PP
.RS
ls \-1 *.fastq > list_reads
dsk \-file list_reads
.RE
.PP
.RE
.PP

.BI "Results visualization"

DSK uses a binary format for its output.

By default, the format is HDF5, so you can use HDF5 tools for getting ascii output 
from the HDF5 output (such tools are provided with DSK distribution).

In particular, the HDF5 output of DSK holds two sets of data:
.PP
.RS
the couples of (kmer,abundance)
.TP
the histogram of abundances
.RE
.PP

You can get content of a dataset (kmers in partition 0, and whole histogram) with:
.PP
.RS
h5dump \-y \-d dsk/solid/0          output.h5
h5dump \-y \-d histogram/histogram  output.h5
.RE
.PP

To see the results as a list of "[kmer] [count]\\n", use the 
.BI "dsk2ascii"
binary with the output file from dsk
.PP
.RS
dsk2ascii \-file output.h5 \-out output.txt
.RE
.PP

To plot kmer coverage distribution,
.PP
.RS
h5dump \-y \-d histogram/histogram  output.h5  | grep "^\\ *[0\-9]" | tr \-d " " | paste \- \- | gnuplot \-p \-e 'plot  "\-" with lines'     
.RE
.PP

.BI "Kmers and their reverse complements"

DSK converts all kmers to their canonical representation with respect to reverse\-complementation.

In other words, a kmer and its reverse complement are considered to be the same object. 
For example, with k=3 and assuming the kmer AAA and its reverse complement TTT are both 
present the input dataset, DSK will consider that one of them is the canonical kmer, e.g. AAA. 
If AAA is present 2 times and TTT 3 times, then DSK outputs that the count of AAA is 5 and 
won't return the count of TTT at all.

Note: a canonical kmer is not necessarily the lexicographically smallest one! DSK uses a 
different ordering for faster performance. Specifically, DSK considers tha A<C<T<G and 
returns the lexicographically smaller kmer using this alphabet order. So, in the example 
above, AAA is indeed the canonical kmer. For the GTA/TAC pair, the lexicographically 
smallest is GTA however the canonical kmer is TAC (as DSK considers that T<G).


.SH OPTIONS
.BI "Disk space and speed"

As a general rule of thumb, run DSK in a folder with plenty of free space, i.e. several times 
the size of the input dataset. You can also specify the 
.BI "\-out\-tmp"
parameter to a location with 
free space. In the output during execution, the number of passes should be low (below 10). 
Else this generally means that more disk space would make the execution much faster. 
DSK auto\-detects the free disk space and uses a fraction of it. You can specify 
.BI "\-max\-disk"
parameter to fine\-tune this.

.SH "SEE ALSO"
.BR dsk (1)
.br
The programs are documented fully by the Genscale Team
available at https://github.com/GATB/dsk

.SH AUTHORS
This manual page was written by Pierre Vignet <pierre.vignet.contact@caramail.fr>
for the Debian project (and may be used by others).
